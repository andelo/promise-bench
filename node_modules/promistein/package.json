{
  "name": "promistein",
  "version": "1.0.0",
  "description": "bramstein/promis (minified version) for nodejs and browser. Packaged for benchmarks. It supports the full Promise API specification.",
  "main": "index.js",
  "scripts": {
    "test": "npm install && ./node_modules/.bin/promises-aplus-tests ./adapter.js"
  },
  "author": {
    "name": "Charlike Make Reagent",
    "email": "mameto_100@mail.bg",
    "url": "https://github.com/tunnckoCore"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/tunnckoCore/promistein.git"
  },
  "keywords": [
    "promises aplus",
    "Promises/A+",
    "promises",
    "promise",
    "promistein",
    "benchmark",
    "async compare",
    "async",
    "promise benchmark",
    "benchmark"
  ],
  "dependencies": {},
  "devDependencies": {
    "promises-aplus-tests": "*"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/tunnckoCore/promistein/blob/master/license.md"
    }
  ],
  "readme": "# promistein [![NPM version][npmjs-shields]][npmjs-url] [![Build Status][travis-img]][travis-url]\n> [bramstein/promis][promistein] (minified version) for nodejs and browser. Packaged for benchmarks. Very pretty and tiny but one of the slowest in Bluebird's benchmarks. **It supports the full Promise API specification.**\n\n## Install [![Nodei.co stats][npmjs-install]][npmjs-url]\n> Install with [npm](https://npmjs.org)\n\n```\n$ npm install promistein\n```\n\n## [Promises/A+ 1.1](https://promisesaplus.com)\n> Run to be sure\n\n```\n$ npm test\n```\n\n\n## API\n\nThe constructor is called with a single function argument.\n\n```javascript\nvar promise = new Promise(function (resolve, reject) {\n  resolve('hello');\n});\n```\n\nInstances of a Promise have two methods available: `then` and `catch`. The `then` method is used to add callbacks for when the promise is resolved or rejected.\n\n```javascript\npromise.then(function (x) {\n  console.log('value is', x);\n}, function (r) {\n  console.log('reason is', r);\n});\n```\n\nThe `catch` method is used the catch rejected promises in a more convenient way.\n\n```javascript\npromise.catch(function (r) {\n  console.log('reason is', r);\n});\n```\n\nBoth methods return a new Promise that can be used for chaining.\n\nThe Promise class also has four class methods: `resolve`, `reject`, `race` and `all`. The `resolve` and `reject` methods are a convenient way of creating already settled promises:\n\n```javascript\nvar resolved = Promise.resolve('hello');\nvar rejected = Promise.reject('bye');\n```\n\nThe `race` method can be used to \"race\" two or more promises against each other. The returned promises is settled with the result of the first promise that settles.\n\n```javascript\n// first will be resolved with 'hello'\nvar first = Promise.race([new Promise(function (resolve) {\n  setTimeout(function () {\n    resolve('world');\n  }, 1000);\n}), Promise.resolve('hello')]);\n```\n\nThe `all` method waits for all promises given to it to resolve and then resolves the promise with the result of all of them.\n\n```javascript\n// all is settles with ['hello', 'world']\nvar all = Promise.all([Promise.resolve('hello'), Promise.resolve('world')]);\n```\n\n## Authors & Contributors [![author tips][author-gittip-img]][author-gittip]\n\n**Charlike Mike Reagent**\n+ [gittip/tunnckoCore][author-gittip]\n+ [github/tunnckoCore][author-github]\n+ [twitter/tunnckoCore][author-twitter]\n+ [npmjs/tunnckoCore][author-npmjs]\n\n\n## License [![MIT license][license-img]][license-url]\nCopyright (c) 2014 [Charlike Mike Reagent][author-website], [contributors](https://github.com/tunnckoCore/promistein/graphs/contributors).  \nReleased under the [`MIT`][license-url] license.\n\n\n[promistein]: https://github.com/bramstein/promis\n[npmjs-url]: http://npm.im/promistein\n[npmjs-shields]: http://img.shields.io/npm/v/promistein.svg\n[npmjs-install]: https://nodei.co/npm/promistein.svg?mini=true\n\n[coveralls-url]: https://coveralls.io/r/tunnckoCore/promistein?branch=master\n[coveralls-shields]: https://img.shields.io/coveralls/tunnckoCore/promistein.svg\n\n[license-url]: https://github.com/tunnckoCore/promistein/blob/master/license.md\n[license-img]: http://img.shields.io/badge/license-MIT-blue.svg\n\n[travis-url]: https://travis-ci.org/tunnckoCore/promistein\n[travis-img]: https://travis-ci.org/tunnckoCore/promistein.svg?branch=master\n\n[depstat-url]: https://david-dm.org/tunnckoCore/promistein\n[depstat-img]: https://david-dm.org/tunnckoCore/promistein.svg\n\n[author-gittip-img]: http://img.shields.io/gittip/tunnckoCore.svg\n[author-gittip]: https://www.gittip.com/tunnckoCore\n[author-github]: https://github.com/tunnckoCore\n[author-twitter]: https://twitter.com/tunnckoCore\n\n[author-website]: http://www.whistle-bg.tk\n[author-npmjs]: https://npmjs.org/~tunnckocore\n\n[cobody-url]: https://github.com/tj/co-body\n[mocha-url]: https://github.com/tj/mocha\n[rawbody-url]: https://github.com/stream-utils/raw-body\n[multer-url]: https://github.com/expressjs/multer\n[express-url]: https://github.com/strongloop/express\n[formidable-url]: https://github.com/felixge/node-formidable\n[co-url]: https://github.com/tj/co\n[extend-url]: https://github.com/justmoon/node-extend\n[csp-report]: https://mathiasbynens.be/notes/csp-reports\n",
  "readmeFilename": "readme.md",
  "gitHead": "6b163e4c240df1a1c5a0d1af8adacca153bb76ae",
  "bugs": {
    "url": "https://github.com/tunnckoCore/promistein/issues"
  },
  "homepage": "https://github.com/tunnckoCore/promistein",
  "_id": "promistein@1.0.0",
  "_shasum": "6d54feb20a21431b26d61d3ae1ad9dfab3bcd33b",
  "_from": "promistein@>=1.0.0 <1.1.0"
}
