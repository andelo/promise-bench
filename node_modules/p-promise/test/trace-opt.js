
var fs = require("fs");

var TOP_CODE = "\
// START-TRACE-FUNCTIONS-CODE\n\
if ( !global.TRACE_FUNCTIONS ) {                                             \n\
	global.TRACE_FUNCTIONS = {                                               \n\
		records: [],                                                         \n\
		nextName: '',                                                        \n\
		set fn(fn) {                                                          \n\
			this.records.push({name: this.nextName||fn.name, fn: fn});       \n\
			this.nextName = '';                                              \n\
			this.optimizeFunctionOnNextCall(fn);                             \n\
		},                                                                   \n\
		getOptimizationStatus: function(fn) {                                \n\
			return %GetOptimizationStatus(fn);                               \n\
		}                                                                    \n\
		optimizeFunctionOnNextCall: function(fn) {                           \n\
			return %OptimizeFunctionOnNextCall(fn);                          \n\
		}                                                                    \n\
	};                                                                       \n\
}                                                                            \n\
// END-TRACE-FUNCTIONS-CODE\n";

function main(argv) {
	var action = argv[2]
	var filenames = argv.slice(3);


	if ( action === "trace" ) {
		filenames.forEach(trace);

	} else if ( action === "untrace" ) {
		filenames.forEach(untrace);

	} else {
		throw new Error("invalid action");
	}
}

function trace(filename) {
	var src = fs.readFileSync(filename, {encoding: "utf8"})
		.replace(/^[ \t]*(?:(\w+)\.prototype\.(\w+) *\= *function[ \(]|function +(\w+) *\()/mg,
			function(all, cls, prop, name) {
				return (cls ?
					'TRACE_FUNCTIONS.nextName = "' + cls+'::'+prop + '"; TRACE_FUNCTIONS.fn = ' :
					'TRACE_FUNCTIONS.fn = ' + name + ';'
				) + '\n' + all;
			}
		);

	fs.writeFileSync(filename, TOP_CODE + src);
}

function untrace(filename) {
	var src = fs.readFileSync(filename, {encoding: "utf8"})
		.replace(/^\/\/ START-TRACE-FUNCTIONS-CODE\n[\s\S]*?\/\/ END-TRACE-FUNCTIONS-CODE\n/, '')
		.replace(/^TRACE_FUNCTIONS\..*?\n/mg, '');

	fs.writeFileSync(filename, src);
}


main(process.argv);
